(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{1019:function(v,_,e){"use strict";e.r(_);var c=e(1),o=Object(c.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[e("code",[v._v("webpack")]),v._v(" 是什么，以及它有什么作用，解决了什么问题，这些都是我们需要在学习 "),e("code",[v._v("webpack")]),v._v(" 的用法之前需要了解的。")]),v._v(" "),e("p",[v._v("如果你上网去搜的话，一般的介绍是它是一个打包工具，那么什么又叫做打包工具? 由于现在的开发都是多人协作开发，所以一般会将功能分成一个个的模块由不同程序员开发，但是这些模块之间并不是毫无关联的，模块之间会有依赖关系。我们分开为了多个文件，由于依赖关系复杂，如果这些文件加载顺序不当，就有可能发生错误，另外分开成多个文件也意味着有多个网络请求，这会对服务器造成压力，所以我们就有需要将它们合并成一个文件的需要，而将多个文件合成成一个文件，我们就称之为打包。")]),v._v(" "),e("p",[v._v("这里贴一张官网的图片")]),v._v(" "),e("ImageView",{attrs:{src:"https://gitee.com/lastknightcoder/blogimage/raw/master/20200715101557.png"}}),v._v(" "),e("p",[v._v("通过官网的图片可以看出，"),e("code",[v._v("webpack")]),v._v(" 可以将依赖的文件打包成单个的资源文件。")]),v._v(" "),e("p",[v._v("但是 "),e("code",[v._v("webpack")]),v._v(" 除了打包之外还有什么作用，或者说我们有什么需求需要它帮我们去完成。例如我们希望在项目中使用高级的 "),e("code",[v._v("JS")]),v._v(" 语法，比如 "),e("code",[v._v("ES6")]),v._v(" 或者更高级的语法，可是浏览器对于 "),e("code",[v._v("ES6")]),v._v(" 的支持可能并不完全，但是我们就是想用，这个时候我们就有将 "),e("code",[v._v("ES6")]),v._v(" 及更高级的语法转化为 "),e("code",[v._v("ES5")]),v._v(" 或更低级语法的需要。")]),v._v(" "),e("p",[v._v("另外，随着项目的复杂，使用 "),e("code",[v._v("CSS")]),v._v(" 编写样式不能满足日益复杂的项目的需要，或者说 "),e("code",[v._v("CSS")]),v._v(" 并不是一个工程语言，这个意思指 "),e("code",[v._v("CSS")]),v._v(" 难以阅读、修改、扩展。所以就出现像 "),e("code",[v._v("less")]),v._v(" "),e("code",[v._v("scss/sass")]),v._v(" 这样的工程化的语言，它可以很方便的写样式，并且十分方便管理，但是浏览器并不认识 "),e("code",[v._v("less")]),v._v(" "),e("code",[v._v("scss")]),v._v(" 等编写的样式，所以我们就有将 "),e("code",[v._v("less、scss/sass")]),v._v(" 文件转化为 "),e("code",[v._v("CSS")]),v._v(" 文件的需要。")]),v._v(" "),e("p",[v._v("再一个，我们会在项目中用到 "),e("code",[v._v("TypeScript")]),v._v("，因为 "),e("code",[v._v("JavaScript")]),v._v(" 的灵活以及动态特性，导致很多的错误只有在运行时才暴露出来，所以 "),e("code",[v._v("JavaScript")]),v._v(" 很容易出现 "),e("code",[v._v("bug")]),v._v("，使用 "),e("code",[v._v("TypeScript")]),v._v(" 可以大大减少这种情况的发生，错误往往在编译时就能够发现，但是浏览器并不支持 "),e("code",[v._v("TypeScript")]),v._v("，所以我们有将 "),e("code",[v._v("TypeScript")]),v._v(" 转化为 "),e("code",[v._v("JavaScript")]),v._v(" 的需要。")]),v._v(" "),e("p",[v._v("其实还有很多的需求，比如压缩文件，比如为 "),e("code",[v._v("CSS")]),v._v(" 样式添加浏览器前缀等等，这些等到我们后面在介绍。")])],1)}),[],!1,null,null,null);_.default=o.exports}}]);